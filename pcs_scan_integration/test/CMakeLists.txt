find_package(GTest REQUIRED)
find_package(tesseract_support REQUIRED)

if(NOT TARGET GTest::GTest)
  add_library(GTest::GTest INTERFACE IMPORTED)
  set_target_properties(GTest::GTest PROPERTIES INTERFACE_INCLUDE_DIRECTORIES "${GTEST_INCLUDE_DIRS}")
  if (${GTEST_LIBRARIES})
    set_target_properties(GTest::GTest PROPERTIES INTERFACE_LINK_LIBRARIES "${GTEST_LIBRARIES}")
  else()
    if (MSVC)
      set_target_properties(GTest::GTest PROPERTIES INTERFACE_LINK_LIBRARIES "gtest.lib")
    else()
      set_target_properties(GTest::GTest PROPERTIES INTERFACE_LINK_LIBRARIES "libgtest.so")
    endif()
  endif()
endif()

if(NOT TARGET GTest::Main)
  add_library(GTest::Main INTERFACE IMPORTED)
  set_target_properties(GTest::Main PROPERTIES INTERFACE_INCLUDE_DIRECTORIES "${GTEST_INCLUDE_DIRS}")
  if (${GTEST_MAIN_LIBRARIES})
    set_target_properties(GTest::Main PROPERTIES INTERFACE_LINK_LIBRARIES "${GTEST_MAIN_LIBRARIES}")
  else()
    if (MSVC)
      set_target_properties(GTest::Main PROPERTIES INTERFACE_LINK_LIBRARIES "gtest_main.lib")
    else()
      set_target_properties(GTest::Main PROPERTIES INTERFACE_LINK_LIBRARIES "libgtest_main.so")
    endif()
  endif()
endif()

include(GoogleTest)

add_executable(${PROJECT_NAME}_octomap_mesh_masking_unit octomap_mesh_masking_unit.cpp)
target_link_libraries(${PROJECT_NAME}_octomap_mesh_masking_unit GTest::GTest GTest::Main ${PROJECT_NAME}_octomap_mesh_masking)
target_compile_options(${PROJECT_NAME}_octomap_mesh_masking_unit PRIVATE -Wsuggest-override -Wconversion -Wsign-conversion)
if(CXX_FEATURE_FOUND EQUAL "-1")
    target_compile_options(${PROJECT_NAME}_octomap_mesh_masking_unit PRIVATE -std=c++11)
else()
    target_compile_features(${PROJECT_NAME}_octomap_mesh_masking_unit PRIVATE cxx_std_11)
endif()
if(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
    target_compile_options(${PROJECT_NAME}_octomap_mesh_masking_unit PRIVATE -mno-avx)
  else()
    message(WARNING "Non-GNU compiler detected. If using AVX instructions, Eigen alignment issues may result.")
  endif()
target_include_directories(${PROJECT_NAME}_octomap_mesh_masking_unit PRIVATE ${GTEST_INCLUDE_DIRS})
if(${CMAKE_VERSION} VERSION_LESS "3.10.0")
    gtest_add_tests(${PROJECT_NAME}_octomap_mesh_masking_unit "" AUTO)
else()
    gtest_discover_tests(${PROJECT_NAME}_octomap_mesh_masking_unit)
endif()
add_dependencies(${PROJECT_NAME}_octomap_mesh_masking_unit ${PACKAGE_LIBRARIES})
target_compile_definitions(${PROJECT_NAME}_octomap_mesh_masking_unit PRIVATE DATA_DIR="${CMAKE_SOURCE_DIR}/test")
add_dependencies(run_tests ${PROJECT_NAME}_octomap_mesh_masking_unit)

